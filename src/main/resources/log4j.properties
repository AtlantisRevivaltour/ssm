
#定义LOG输出级别
log4j.rootLogger=INFO,Console,File
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
#可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n

#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.File = org.apache.log4j.RollingFileAppender
#指定输出目录
log4j.appender.File.File = logs/ssm.log
#定义文件最大大小
log4j.appender.File.MaxFileSize = 10MB
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold = ALL
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n



#### direct log messages to stdout ###
#log4j.addivity.org.apache=true
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%L - %m%n
#
##log4j.addivity.org.apache=true
#
##log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#
##log4j.appender.Threshold=error
#
##log4j.appender.CONSOLE.Target=System.out
#
##log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#
##log4j.appender.CONSOLE.layout.ConversionPattern=[log4j] %d - %c -%-4r [%t] %-5p %c %x - %m%n
#### direct messages to file hibernate.log ###
#log4j.appender.FILE=org.apache.log4j.FileAppender
#log4j.appender.FILE.File=${catalina.home}/logs/log4j.log
#log4j.appender.FILE.Append=true
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
#log4j.appender.FILE.DatePattern=yyyy-MM-dd
#
#### set log levels - for more verbose logging change 'info' to 'debug' ###
#
##log4j.rootLogger=debug,stdout
#log4j.rootLogger=info, stdout,FILE
##DEBUG?INFO?WARN?ERROR?FATAL
##log4j.logger.org.hibernate=info
##log4j.logger.org.hibernate=debug
#### log HQL query parser activity
##log4j.logger.org.hibernate.hql.ast.AST=debug
#
#### log just the SQL
##log4j.logger.org.hibernate.SQL=debug
#
#### log JDBC bind parameters ###
##log4j.logger.org.hibernate.type=info
##log4j.logger.org.hibernate.type=debug
#
#### log schema export/update ###
#log4j.logger.com.ibatis=debug
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
#log4j.logger.java.sql.Connection=debug
#log4j.logger.java.sql.Statement=debug
#log4j.logger.com.mobile.base.jdbc.DBHelperImpl=debug
#log4j.logger.java.sql.PreparedStatement=debug,stdout
##log4j.logger.java.sql.ResultSet=debug,stdout
#### log HQL parse trees
##log4j.logger.org.hibernate.hql=debug
#
#### log cache activity ###
##log4j.logger.org.hibernate.cache=debug
#
#### log transaction activity
##log4j.logger.org.hibernate.transaction=debug
#
#### log JDBC resource acquisition
##log4j.logger.org.hibernate.jdbc=debug
#
#### enable the following line if you want to track down connection ###
#### leakages when using DriverManagerConnectionProvider ###
##log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
